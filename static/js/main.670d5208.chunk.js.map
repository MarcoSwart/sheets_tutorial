{"version":3,"sources":["views/authorise.js","views/homepage.js","App.js","reportWebVitals.js","index.js"],"names":["AuthorizeView","handleAuth","className","id","onClick","HomePageView","style","backgroundColor","padding","type","placeholder","App","DISCOVERY_DOCS","useState","userSignedIn","setUserSignedIn","initClient","window","gapi","client","init","apiKey","clientId","discoveryDocs","scope","then","auth2","getAuthInstance","isSignedIn","listen","get","error","console","log","useEffect","load","event","signIn","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAaeA,MAbf,YAAwC,IAAfC,EAAc,EAAdA,WACrB,OACI,qBAAKC,UAAU,WAAf,SACI,wBACIA,UAAU,4BACVC,GAAG,mBACHC,QAAS,kBAAMH,GAHnB,0BCwCGI,MA3Cf,WACI,OACI,qCACI,sBAAKH,UAAU,WAAf,UACI,8CACA,8BACI,wBACIA,UAAU,2BADd,0BAKJ,8BACI,wBACIA,UAAU,sCADd,4BAKJ,sBAAKI,MAAO,CAAEC,gBAAiB,YAAaC,QAAS,QAArD,UACI,+CACA,uBAAON,UAAU,kBAAjB,mBAGA,uBACIO,KAAK,OACLC,YAAY,oBACZR,UAAU,iBACd,wBACIA,UAAU,iCADd,8BAKJ,wBACIA,UAAU,iCADd,yBAKJ,qBAAKA,UAAU,iBC2BZS,MA1Df,WACE,IAEIC,EAAiB,CAAC,8DAHT,EAK2BC,oBAAS,GALpC,mBAKNC,EALM,KAKQC,EALR,KAeb,SAASC,IACPC,OAAOC,KAAKC,OAAOC,KAAK,CACtBC,OAfU,0CAgBVC,SAjBY,2EAkBZC,cAAeX,EACfY,MAhBS,0CAiBRC,MAAK,WAENR,OAAOC,KAAKQ,MAAMC,kBAAkBC,WAAWC,QAAO,SAACD,GAAD,OAAgBb,EAAgBa,MAEtFb,EAAgBE,OAAOC,KAAKQ,MAAMC,kBAAkBC,WAAWE,UAC9D,SAAUC,GAEXC,QAAQC,IAAIF,MAYhB,OAjCAG,qBAAU,WACRjB,OAAOC,KAAKiB,KAAK,eAAgBnB,KAChC,IAEHkB,qBAAU,WACRF,QAAQC,IAAInB,KACX,CAACA,IA4BF,sBAAKZ,UAAU,YAAf,UACE,qBAAKA,UAAU,MAAf,SACE,gEAEF,qBAAKA,UAAU,MAAf,SAEGY,EACC,cAAC,EAAD,IAEA,cAAC,EAAD,CAAeb,WAlBvB,SAAyBmC,GACvBnB,OAAOC,KAAKQ,MAAMC,kBAAkBU,kBC1BzBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.670d5208.chunk.js","sourcesContent":["function AuthorizeView({ handleAuth }) {\r\n    return (\r\n        <div className=\"col-sm-6\">\r\n            <button\r\n                className=\"btn btn-secondary  btn-sm\"\r\n                id=\"authorize_button\"\r\n                onClick={() => handleAuth}>\r\n                Authorize\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AuthorizeView;","function HomePageView() {\r\n    return (\r\n        <>\r\n            <div className=\"col-sm-6\">\r\n                <h4>Google Drive</h4>\r\n                <div>\r\n                    <button\r\n                        className=\"btn btn-secondary btn-sm\">\r\n                        List Files\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                    <button\r\n                        className=\"btn btn-secondary  btn-sm mt-3 mb-3\">\r\n                        List Folders\r\n                    </button>\r\n                </div>\r\n                <div style={{ backgroundColor: \"lightgrey\", padding: \"10px\" }}>\r\n                    <h5>Create Folder</h5>\r\n                    <label className=\"form-label mt-1\">\r\n                        Name:\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter folder name\"\r\n                        className=\"form-control\" />\r\n                    <button\r\n                        className=\"btn btn-secondary  btn-sm mt-3\">\r\n                        Create Folder\r\n                    </button>\r\n                </div>\r\n                <button\r\n                    className=\"btn btn-secondary  btn-sm mt-3\">\r\n                    Sign Out\r\n                    </button>\r\n            </div>\r\n            <div className=\"col-sm-6\">\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HomePageView;","import './App.css';\nimport { useEffect, useState } from 'react';\nimport AuthorizeView from './views/authorise';\nimport HomePageView from './views/homepage';\n\nfunction App() {\n  var CLIENT_ID = '374215012772-g9f3hhiqfelp662h12qjv20f9vd14dkt.apps.googleusercontent.com';\n  var API_KEY = 'AIzaSyDhFXX9Rg8G2EBeDUjeFhuPr3Z9AdjaNeI';\n  var DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\"];\n  var SCOPES = 'https://www.googleapis.com/auth/drive';\n  const [userSignedIn, setUserSignedIn] = useState(false);\n\n  useEffect(() => {\n    window.gapi.load('client:auth2', initClient);;\n  }, []);\n\n  useEffect(() => {\n    console.log(userSignedIn);\n  }, [userSignedIn]);\n\n  function initClient() {\n    window.gapi.client.init({\n      apiKey: API_KEY,\n      clientId: CLIENT_ID,\n      discoveryDocs: DISCOVERY_DOCS,\n      scope: SCOPES\n    }).then(function () {\n      // Listen for sign-in state changes.\n      window.gapi.auth2.getAuthInstance().isSignedIn.listen((isSignedIn) => setUserSignedIn(isSignedIn));\n      // Handle the initial sign-in state.\n      setUserSignedIn(window.gapi.auth2.getAuthInstance().isSignedIn.get());\n    }, function (error) {\n      // appendPre(JSON.stringify(error, null, 2));\n      console.log(error);\n    });\n  }\n\n  function handleAuthClick(event) {\n    window.gapi.auth2.getAuthInstance().signIn();\n  }\n\n  function handleSignoutClick(event) {\n    window.gapi.auth2.getAuthInstance().signOut();\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <h3>Drive API Quickstart (Marco)</h3>\n      </div>\n      <div className=\"row\">\n\n        {userSignedIn ?\n          <HomePageView />\n          :\n          <AuthorizeView handleAuth={handleAuthClick} />\n        }\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}